---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: ck8sconfigs.bootstrap.cluster.x-k8s.io
spec:
  group: bootstrap.cluster.x-k8s.io
  names:
    kind: CK8sConfig
    listKind: CK8sConfigList
    plural: ck8sconfigs
    singular: ck8sconfig
  scope: Namespaced
  versions:
  - name: v1beta2
    schema:
      openAPIV3Schema:
        description: CK8sConfig is the Schema for the ck8sconfigs API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: CK8sConfigSpec defines the desired state of CK8sConfig.
            properties:
              ExtraK8sAPIServerProxyArgs:
                additionalProperties:
                  type: string
                description: ExtraK8sAPIServerProxyArgs - extra arguments to add to
                  k8s-api-server-proxy.
                type: object
              airGapped:
                description: |-
                  AirGapped is used to signal that we are deploying to an airgap environment. In this case,
                  the provider will not attempt to install k8s-snap on the machine. The user is expected to
                  install k8s-snap manually with preRunCommands, or provide an image with k8s-snap pre-installed.
                type: boolean
              bootCommands:
                description: BootCommands specifies extra commands to run in cloud-init
                  early in the boot process.
                items:
                  type: string
                type: array
              bootstrapConfig:
                description: BootstrapConfig is the data to be passed to the bootstrap
                  script.
                properties:
                  content:
                    description: |-
                      Content is the actual content of the file.
                      If this is set, ContentFrom is ignored.
                    type: string
                  contentFrom:
                    description: ContentFrom is a referenced source of content to
                      populate the file.
                    properties:
                      secret:
                        description: Secret represents a secret that should populate
                          this file.
                        properties:
                          key:
                            description: Key is the key in the secret's data map for
                              this value.
                            type: string
                          name:
                            description: Name of the secret in the CK8sBootstrapConfig's
                              namespace to use.
                            type: string
                        required:
                        - key
                        - name
                        type: object
                    required:
                    - secret
                    type: object
                type: object
              channel:
                description: Channel is the channel to use for the snap install.
                type: string
              controlPlane:
                description: CK8sControlPlaneConfig is configuration for the control
                  plane node.
                properties:
                  ExtraK8sDqliteArgs:
                    additionalProperties:
                      type: string
                    description: ExtraK8sDqliteArgs - extra arguments to add to k8s-dqlite.
                    type: object
                  cloudProvider:
                    description: CloudProvider is the cloud-provider configuration
                      option to set.
                    type: string
                  datastoreServersSecretRef:
                    description: DatastoreServersSecretRef is a reference to a secret
                      containing the datastore servers.
                    properties:
                      key:
                        description: Key is the key in the secret's data map for this
                          value.
                        type: string
                      name:
                        description: Name of the secret in the CK8sBootstrapConfig's
                          namespace to use.
                        type: string
                    required:
                    - name
                    type: object
                  datastoreType:
                    description: DatastoreType is the type of datastore to use for
                      the control plane.
                    type: string
                  extraKubeAPIServerArgs:
                    additionalProperties:
                      type: string
                    description: ExtraKubeAPIServerArgs - extra arguments to add to
                      kube-apiserver.
                    type: object
                  extraKubeControllerManagerArgs:
                    additionalProperties:
                      type: string
                    description: ExtraKubeControllerManagerArgs - extra arguments
                      to add to kube-controller-manager.
                    type: object
                  extraKubeSchedulerArgs:
                    additionalProperties:
                      type: string
                    description: ExtraKubeSchedulerArgs - extra arguments to add to
                      kube-scheduler.
                    type: object
                  extraSANs:
                    description: ExtraSANs is a list of SANs to include in the server
                      certificates.
                    items:
                      type: string
                    type: array
                  k8sDqlitePort:
                    description: K8sDqlitePort is the port to use for k8s-dqlite.
                      If unset, 2379 (etcd) will be used.
                    type: integer
                  microclusterAddress:
                    description: MicroclusterAddress is the address (or CIDR) to use
                      for microcluster. If unset, the default node interface is chosen.
                    type: string
                  microclusterPort:
                    description: MicroclusterPort is the port to use for microcluster.
                      If unset, ":2380" (etcd peer) will be used.
                    type: integer
                  nodeTaints:
                    description: NodeTaints is taints to add to the control plane
                      kubelet nodes.
                    items:
                      type: string
                    type: array
                type: object
              extraContainerdArgs:
                additionalProperties:
                  type: string
                description: ExtraContainerdArgs - extra arguments to add to containerd.
                type: object
              extraKubeProxyArgs:
                additionalProperties:
                  type: string
                description: ExtraKubeProxyArgs - extra arguments to add to kube-proxy.
                type: object
              extraKubeletArgs:
                additionalProperties:
                  type: string
                description: ExtraKubeletArgs - extra arguments to add to kubelet.
                type: object
              files:
                description: Files specifies extra files to be passed to user_data
                  upon creation.
                items:
                  description: File defines the input for generating write_files in
                    cloud-init.
                  properties:
                    content:
                      description: Content is the actual content of the file.
                      type: string
                    contentFrom:
                      description: ContentFrom is a referenced source of content to
                        populate the file.
                      properties:
                        secret:
                          description: Secret represents a secret that should populate
                            this file.
                          properties:
                            key:
                              description: Key is the key in the secret's data map
                                for this value.
                              type: string
                            name:
                              description: Name of the secret in the CK8sBootstrapConfig's
                                namespace to use.
                              type: string
                          required:
                          - key
                          - name
                          type: object
                      required:
                      - secret
                      type: object
                    encoding:
                      description: Encoding specifies the encoding of the file contents.
                      enum:
                      - base64
                      - gzip
                      - gzip+base64
                      type: string
                    owner:
                      description: Owner specifies the ownership of the file, e.g.
                        "root:root".
                      type: string
                    path:
                      description: Path specifies the full path on disk where to store
                        the file.
                      type: string
                    permissions:
                      description: Permissions specifies the permissions to assign
                        to the file, e.g. "0640".
                      type: string
                  required:
                  - path
                  type: object
                type: array
              httpProxy:
                description: HTTPProxy is optional http proxy configuration
                type: string
              httpsProxy:
                description: HTTPSProxy is optional https proxy configuration
                type: string
              initConfig:
                description: CK8sInitConfig is configuration for the initializing
                  the cluster features.
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: Annotations are used to configure the behaviour of
                      the built-in features.
                    type: object
                  enableDefaultDNS:
                    description: EnableDefaultDNS specifies whether to enable the
                      default DNS configuration.
                    type: boolean
                  enableDefaultGateway:
                    description: EnableDefaultGateway specifies whether to enable
                      the default Gateway configuration.
                    type: boolean
                  enableDefaultIngress:
                    description: EnableDefaultIngress specifies whether to enable
                      the default Ingress configuration.
                    type: boolean
                  enableDefaultLoadBalancer:
                    description: EnableDefaultLoadBalancer specifies whether to enable
                      the default load-balancer configuration.
                    type: boolean
                  enableDefaultLocalStorage:
                    description: EnableDefaultLocalStorage specifies whether to enable
                      the default local storage.
                    type: boolean
                  enableDefaultMetricsServer:
                    description: EnableDefaultMetricsServer specifies whether to enable
                      the default metrics server.
                    type: boolean
                  enableDefaultNetwork:
                    description: EnableDefaultNetwork specifies whether to enable
                      the default CNI.
                    type: boolean
                type: object
              localPath:
                description: |-
                  LocalPath is the path of a local snap file in the workload cluster to use for the snap install.
                  If Channel or Revision are set, this will be ignored.
                type: string
              noProxy:
                description: NoProxy is optional no proxy configuration
                type: string
              nodeName:
                description: |-
                  NodeName is the name to use for the kubelet of this node. It is needed for clouds
                  where the cloud-provider has specific pre-requisites about the node names. It is
                  typically set in Jinja template form, e.g."{{ ds.meta_data.local_hostname }}".
                type: string
              postRunCommands:
                description: PostRunCommands specifies extra commands to run in cloud-init
                  after k8s-snap setup runs.
                items:
                  type: string
                type: array
              preRunCommands:
                description: PreRunCommands specifies extra commands to run in cloud-init
                  before k8s-snap setup runs.
                items:
                  type: string
                type: array
              revision:
                description: |-
                  Revision is the revision to use for the snap install.
                  If Channel is set, this will be ignored.
                type: string
              snapstoreProxyDomain:
                description: The snap store proxy domain
                type: string
              snapstoreProxyId:
                description: The snap store proxy ID
                type: string
              snapstoreProxyScheme:
                default: http
                description: |-
                  The snap store proxy domain's scheme, e.g. "http" or "https" without "://"
                  Defaults to "http".
                enum:
                - http
                - https
                type: string
              version:
                description: Version specifies the Kubernetes version.
                type: string
            type: object
          status:
            description: CK8sConfigStatus defines the observed state of CK8sConfig.
            properties:
              bootstrapData:
                format: byte
                type: string
              conditions:
                description: Conditions defines current service state of the CK8sConfig.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: |-
                        Last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed. If that is not known, then using the time when
                        the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A human readable message indicating details about the transition.
                        This field may be empty.
                      type: string
                    reason:
                      description: |-
                        The reason for the condition's last transition in CamelCase.
                        The specific API may choose whether or not this field is considered a guaranteed API.
                        This field may not be empty.
                      type: string
                    severity:
                      description: |-
                        Severity provides an explicit classification of Reason code, so the users or machines can immediately
                        understand the current situation and act accordingly.
                        The Severity field MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: |-
                        Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                        can be useful (see .node.status.conditions), the ability to deconflict is important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              dataSecretName:
                description: DataSecretName is the name of the secret that stores
                  the bootstrap data script.
                type: string
              failureMessage:
                description: FailureMessage will be set on non-retryable errors
                type: string
              failureReason:
                description: FailureReason will be set on non-retryable errors
                type: string
              observedGeneration:
                description: ObservedGeneration is the latest generation observed
                  by the controller.
                format: int64
                type: integer
              ready:
                description: Ready indicates the BootstrapData field is ready to be
                  consumed
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
